<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DC Spider Music Bot - Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: #fff;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        header {
            text-align: center;
            margin-bottom: 40px;
        }

        h1 {
            font-size: 3rem;
            margin-bottom: 10px;
        }

        .subtitle {
            font-size: 1.2rem;
            opacity: 0.9;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 30px;
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .stat-label {
            font-size: 1rem;
            opacity: 0.8;
        }

        .queues-section {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 30px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .queues-section h2 {
            margin-bottom: 20px;
            font-size: 1.8rem;
        }

        .queue-item {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
        }

        .queue-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .server-name {
            font-size: 1.2rem;
            font-weight: bold;
        }

        .status-badge {
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
        }

        .status-playing {
            background: #4ade80;
            color: #000;
        }

        .status-paused {
            background: #fbbf24;
            color: #000;
        }

        .song-info {
            margin-top: 10px;
        }

        .song-title {
            font-size: 1.1rem;
            margin-bottom: 5px;
        }

        .song-meta {
            opacity: 0.7;
            font-size: 0.9rem;
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            opacity: 0.7;
        }

        footer {
            text-align: center;
            margin-top: 40px;
            opacity: 0.7;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>üéµ DC Spider Music Bot</h1>
            <p class="subtitle">Real-time Music Dashboard</p>
        </header>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-value" id="totalServers"><%= stats.totalServers %></div>
                <div class="stat-label">Servers</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="totalSongs"><%= stats.totalSongs %></div>
                <div class="stat-label">Songs in Queue</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="activeConnections"><%= stats.activeConnections %></div>
                <div class="stat-label">Active Players</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="uptime">0h 0m</div>
                <div class="stat-label">Uptime</div>
            </div>
        </div>

        <div class="queues-section">
            <h2>Active Queues</h2>
            <div id="queues-list">
                <div class="empty-state">
                    <p>No active queues at the moment</p>
                </div>
            </div>
        </div>

        <footer>
            <p>DC Spider Music Bot ¬© 2025 ‚Ä¢ Premium Discord Music Streaming</p>
        </footer>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        socket.on('stats', (stats) => {
            document.getElementById('totalServers').textContent = stats.totalServers;
            document.getElementById('totalSongs').textContent = stats.totalSongs;
            document.getElementById('activeConnections').textContent = stats.activeConnections;
            
            const hours = Math.floor(stats.uptime / 3600);
            const minutes = Math.floor((stats.uptime % 3600) / 60);
            document.getElementById('uptime').textContent = `${hours}h ${minutes}m`;
        });

        socket.on('queues', (queues) => {
            const queuesList = document.getElementById('queues-list');
            
            if (queues.length === 0) {
                queuesList.innerHTML = '<div class="empty-state"><p>No active queues at the moment</p></div>';
                return;
            }

            queuesList.innerHTML = queues.map(queue => `
                <div class="queue-item">
                    <div class="queue-header">
                        <div class="server-name">${queue.guildName}</div>
                        <span class="status-badge ${queue.isPlaying ? 'status-playing' : 'status-paused'}">
                            ${queue.isPlaying ? '‚ñ∂Ô∏è Playing' : '‚è∏Ô∏è Paused'}
                        </span>
                    </div>
                    ${queue.currentSong ? `
                        <div class="song-info">
                            <div class="song-title">üéµ ${queue.currentSong.title}</div>
                            <div class="song-meta">
                                Channel: ${queue.currentSong.channel} ‚Ä¢ 
                                Volume: ${queue.volume}% ‚Ä¢ 
                                Loop: ${queue.loopMode}
                            </div>
                        </div>
                    ` : '<p>No song playing</p>'}
                </div>
            `).join('');
        });
    </script>
</body>
</html>

